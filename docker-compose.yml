version: "3.8"
services:
  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "8080:80" # public entrypoint
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx/render_and_run.sh:/docker-entrypoint.d/render_and_run.sh:ro
      - ./logs:/var/log/nginx
    environment:
      ACTIVE_POOL: "${ACTIVE_POOL}"
    depends_on:
      - app_blue
      - app_green
    networks:
      - cg_net
    restart: unless-stopped

  app_blue:
    image: "${BLUE_IMAGE}"
    platform: linux/amd64
    container_name: app_blue
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
    ports:
      - "8081:${PORT}" # grader will call /chaos/* directly here
    networks:
      - cg_net
    restart: unless-stopped

  app_green:
    image: "${GREEN_IMAGE}"
    platform: linux/amd64
    container_name: app_green
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
    ports:
      - "8082:${PORT}" # grader will call /chaos/* directly here
    networks:
      - cg_net
    restart: unless-stopped
  alert_watcher:
    build:
      context: ./alert_watcher
    container_name: alert_watcher
    environment:
      SLACK_WEBHOOK_URL: "${SLACK_WEBHOOK_URL}"
      ERROR_RATE_THRESHOLD: "${ERROR_RATE_THRESHOLD:-2}"
      WINDOW_SIZE: "${WINDOW_SIZE:-200}"
      ALERT_COOLDOWN_SEC: "${ALERT_COOLDOWN_SEC:-300}"
    volumes:
      - ./alert_watcher/watcher.py:/app/watcher.py # host file replaces container file
      - ./logs:/var/log/nginx # access logs
    working_dir: /app
    command: python -u watcher.py
    restart: always
    depends_on:
      - nginx
networks:
  cg_net:
    driver: bridge
